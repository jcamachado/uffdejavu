# Alternative GNU Make project makefile autogenerated by Premake

ifndef config
  config=debug
endif

ifndef verbose
  SILENT = @
endif

.PHONY: clean prebuild

SHELLTYPE := posix
ifeq ($(shell echo "test"), "test")
	SHELLTYPE := msdos
endif

# Configurations
# #############################################

ifeq ($(origin CC), default)
  CC = gcc
endif
ifeq ($(origin CXX), default)
  CXX = g++
endif
ifeq ($(origin AR), default)
  AR = ar
endif
RESCOMP = windres
TARGETDIR = bin/SPIRV-Tools
TARGET = $(TARGETDIR)/libSPIRV-Tools.a
INCLUDES += -Ithird_party/spirv-tools -Ithird_party/spirv-headers/include -Ithird_party/spirv-tools/include
FORCE_INCLUDE +=
ALL_CPPFLAGS += $(CPPFLAGS) -MD -MP $(DEFINES) $(INCLUDES)
ALL_RESFLAGS += $(RESFLAGS) $(DEFINES) $(INCLUDES)
LIBS +=
LDDEPS +=
LINKCMD = $(AR) -rcs "$@" $(OBJECTS)
define PREBUILDCMDS
endef
define PRELINKCMDS
endef
define POSTBUILDCMDS
endef

ifeq ($(config),debug)
OBJDIR = bin-int/SPIRV-Tools/Debug
DEFINES += -DSPIRV_CHECK_CONTEXT -DSPIRV_COLOR_TERMINAL -DSPIRV_LINUX -DSPIRV_TIMER_ENABLED
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -g -fdiagnostics-color=always -fPIC -fno-rtti -fno-exceptions -ggdb -Wall -Wextra -Wpedantic -Wshadow
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -g -std=c++20 -fdiagnostics-color=always -fPIC -fno-rtti -fno-exceptions -ggdb -Wall -Wextra -Wpedantic -Wshadow
ALL_LDFLAGS += $(LDFLAGS) -L/usr/lib64 -m64

else ifeq ($(config),release)
OBJDIR = bin-int/SPIRV-Tools/Release
DEFINES += -DSPIRV_CHECK_CONTEXT -DSPIRV_COLOR_TERMINAL -DSPIRV_LINUX -DSPIRV_TIMER_ENABLED -DNDEBUG
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -O2 -fdiagnostics-color=always -fPIC -fno-rtti -fno-exceptions -Wall -Wextra -Wpedantic -Wshadow
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -O2 -std=c++20 -fdiagnostics-color=always -fPIC -fno-rtti -fno-exceptions -Wall -Wextra -Wpedantic -Wshadow
ALL_LDFLAGS += $(LDFLAGS) -L/usr/lib64 -m64 -s

else ifeq ($(config),dist)
OBJDIR = bin-int/SPIRV-Tools/Dist
DEFINES += -DSPIRV_CHECK_CONTEXT -DSPIRV_COLOR_TERMINAL -DSPIRV_LINUX -DSPIRV_TIMER_ENABLED
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -fdiagnostics-color=always -fPIC -fno-rtti -fno-exceptions -Wall -Wextra -Wpedantic -Wshadow
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -std=c++20 -fdiagnostics-color=always -fPIC -fno-rtti -fno-exceptions -Wall -Wextra -Wpedantic -Wshadow
ALL_LDFLAGS += $(LDFLAGS) -L/usr/lib64 -m64 -s

endif

# Per File Configurations
# #############################################


# File sets
# #############################################

GENERATED :=
OBJECTS :=

GENERATED += $(OBJDIR)/assembly_grammar.o
GENERATED += $(OBJDIR)/basic_block.o
GENERATED += $(OBJDIR)/binary.o
GENERATED += $(OBJDIR)/bit_vector.o
GENERATED += $(OBJDIR)/construct.o
GENERATED += $(OBJDIR)/diagnostic.o
GENERATED += $(OBJDIR)/disassemble.o
GENERATED += $(OBJDIR)/enum_string_mapping.o
GENERATED += $(OBJDIR)/ext_inst.o
GENERATED += $(OBJDIR)/extensions.o
GENERATED += $(OBJDIR)/function.o
GENERATED += $(OBJDIR)/instruction.o
GENERATED += $(OBJDIR)/libspirv.o
GENERATED += $(OBJDIR)/name_mapper.o
GENERATED += $(OBJDIR)/opcode.o
GENERATED += $(OBJDIR)/operand.o
GENERATED += $(OBJDIR)/parse_number.o
GENERATED += $(OBJDIR)/parsed_operand.o
GENERATED += $(OBJDIR)/print.o
GENERATED += $(OBJDIR)/software_version.o
GENERATED += $(OBJDIR)/spirv_endian.o
GENERATED += $(OBJDIR)/spirv_fuzzer_options.o
GENERATED += $(OBJDIR)/spirv_optimizer_options.o
GENERATED += $(OBJDIR)/spirv_reducer_options.o
GENERATED += $(OBJDIR)/spirv_target_env.o
GENERATED += $(OBJDIR)/spirv_validator_options.o
GENERATED += $(OBJDIR)/string_utils.o
GENERATED += $(OBJDIR)/table.o
GENERATED += $(OBJDIR)/text.o
GENERATED += $(OBJDIR)/text_handler.o
GENERATED += $(OBJDIR)/timer.o
GENERATED += $(OBJDIR)/validate.o
GENERATED += $(OBJDIR)/validate_adjacency.o
GENERATED += $(OBJDIR)/validate_annotation.o
GENERATED += $(OBJDIR)/validate_arithmetics.o
GENERATED += $(OBJDIR)/validate_atomics.o
GENERATED += $(OBJDIR)/validate_barriers.o
GENERATED += $(OBJDIR)/validate_bitwise.o
GENERATED += $(OBJDIR)/validate_builtins.o
GENERATED += $(OBJDIR)/validate_capability.o
GENERATED += $(OBJDIR)/validate_cfg.o
GENERATED += $(OBJDIR)/validate_composites.o
GENERATED += $(OBJDIR)/validate_constants.o
GENERATED += $(OBJDIR)/validate_conversion.o
GENERATED += $(OBJDIR)/validate_debug.o
GENERATED += $(OBJDIR)/validate_decorations.o
GENERATED += $(OBJDIR)/validate_derivatives.o
GENERATED += $(OBJDIR)/validate_execution_limitations.o
GENERATED += $(OBJDIR)/validate_extensions.o
GENERATED += $(OBJDIR)/validate_function.o
GENERATED += $(OBJDIR)/validate_id.o
GENERATED += $(OBJDIR)/validate_image.o
GENERATED += $(OBJDIR)/validate_instruction.o
GENERATED += $(OBJDIR)/validate_interfaces.o
GENERATED += $(OBJDIR)/validate_layout.o
GENERATED += $(OBJDIR)/validate_literals.o
GENERATED += $(OBJDIR)/validate_logicals.o
GENERATED += $(OBJDIR)/validate_memory.o
GENERATED += $(OBJDIR)/validate_memory_semantics.o
GENERATED += $(OBJDIR)/validate_misc.o
GENERATED += $(OBJDIR)/validate_mode_setting.o
GENERATED += $(OBJDIR)/validate_non_uniform.o
GENERATED += $(OBJDIR)/validate_primitives.o
GENERATED += $(OBJDIR)/validate_scopes.o
GENERATED += $(OBJDIR)/validate_small_type_uses.o
GENERATED += $(OBJDIR)/validate_type.o
GENERATED += $(OBJDIR)/validation_state.o
OBJECTS += $(OBJDIR)/assembly_grammar.o
OBJECTS += $(OBJDIR)/basic_block.o
OBJECTS += $(OBJDIR)/binary.o
OBJECTS += $(OBJDIR)/bit_vector.o
OBJECTS += $(OBJDIR)/construct.o
OBJECTS += $(OBJDIR)/diagnostic.o
OBJECTS += $(OBJDIR)/disassemble.o
OBJECTS += $(OBJDIR)/enum_string_mapping.o
OBJECTS += $(OBJDIR)/ext_inst.o
OBJECTS += $(OBJDIR)/extensions.o
OBJECTS += $(OBJDIR)/function.o
OBJECTS += $(OBJDIR)/instruction.o
OBJECTS += $(OBJDIR)/libspirv.o
OBJECTS += $(OBJDIR)/name_mapper.o
OBJECTS += $(OBJDIR)/opcode.o
OBJECTS += $(OBJDIR)/operand.o
OBJECTS += $(OBJDIR)/parse_number.o
OBJECTS += $(OBJDIR)/parsed_operand.o
OBJECTS += $(OBJDIR)/print.o
OBJECTS += $(OBJDIR)/software_version.o
OBJECTS += $(OBJDIR)/spirv_endian.o
OBJECTS += $(OBJDIR)/spirv_fuzzer_options.o
OBJECTS += $(OBJDIR)/spirv_optimizer_options.o
OBJECTS += $(OBJDIR)/spirv_reducer_options.o
OBJECTS += $(OBJDIR)/spirv_target_env.o
OBJECTS += $(OBJDIR)/spirv_validator_options.o
OBJECTS += $(OBJDIR)/string_utils.o
OBJECTS += $(OBJDIR)/table.o
OBJECTS += $(OBJDIR)/text.o
OBJECTS += $(OBJDIR)/text_handler.o
OBJECTS += $(OBJDIR)/timer.o
OBJECTS += $(OBJDIR)/validate.o
OBJECTS += $(OBJDIR)/validate_adjacency.o
OBJECTS += $(OBJDIR)/validate_annotation.o
OBJECTS += $(OBJDIR)/validate_arithmetics.o
OBJECTS += $(OBJDIR)/validate_atomics.o
OBJECTS += $(OBJDIR)/validate_barriers.o
OBJECTS += $(OBJDIR)/validate_bitwise.o
OBJECTS += $(OBJDIR)/validate_builtins.o
OBJECTS += $(OBJDIR)/validate_capability.o
OBJECTS += $(OBJDIR)/validate_cfg.o
OBJECTS += $(OBJDIR)/validate_composites.o
OBJECTS += $(OBJDIR)/validate_constants.o
OBJECTS += $(OBJDIR)/validate_conversion.o
OBJECTS += $(OBJDIR)/validate_debug.o
OBJECTS += $(OBJDIR)/validate_decorations.o
OBJECTS += $(OBJDIR)/validate_derivatives.o
OBJECTS += $(OBJDIR)/validate_execution_limitations.o
OBJECTS += $(OBJDIR)/validate_extensions.o
OBJECTS += $(OBJDIR)/validate_function.o
OBJECTS += $(OBJDIR)/validate_id.o
OBJECTS += $(OBJDIR)/validate_image.o
OBJECTS += $(OBJDIR)/validate_instruction.o
OBJECTS += $(OBJDIR)/validate_interfaces.o
OBJECTS += $(OBJDIR)/validate_layout.o
OBJECTS += $(OBJDIR)/validate_literals.o
OBJECTS += $(OBJDIR)/validate_logicals.o
OBJECTS += $(OBJDIR)/validate_memory.o
OBJECTS += $(OBJDIR)/validate_memory_semantics.o
OBJECTS += $(OBJDIR)/validate_misc.o
OBJECTS += $(OBJDIR)/validate_mode_setting.o
OBJECTS += $(OBJDIR)/validate_non_uniform.o
OBJECTS += $(OBJDIR)/validate_primitives.o
OBJECTS += $(OBJDIR)/validate_scopes.o
OBJECTS += $(OBJDIR)/validate_small_type_uses.o
OBJECTS += $(OBJDIR)/validate_type.o
OBJECTS += $(OBJDIR)/validation_state.o

# Rules
# #############################################

all: $(TARGET)
	@:

$(TARGET): $(GENERATED) $(OBJECTS) $(LDDEPS) | $(TARGETDIR)
	$(PRELINKCMDS)
	@echo Linking SPIRV-Tools
	$(SILENT) $(LINKCMD)
	$(POSTBUILDCMDS)

$(TARGETDIR):
	@echo Creating $(TARGETDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(TARGETDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(TARGETDIR))
endif

$(OBJDIR):
	@echo Creating $(OBJDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(OBJDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(OBJDIR))
endif

clean:
	@echo Cleaning SPIRV-Tools
ifeq (posix,$(SHELLTYPE))
	$(SILENT) rm -f  $(TARGET)
	$(SILENT) rm -rf $(GENERATED)
	$(SILENT) rm -rf $(OBJDIR)
else
	$(SILENT) if exist $(subst /,\\,$(TARGET)) del $(subst /,\\,$(TARGET))
	$(SILENT) if exist $(subst /,\\,$(GENERATED)) del /s /q $(subst /,\\,$(GENERATED))
	$(SILENT) if exist $(subst /,\\,$(OBJDIR)) rmdir /s /q $(subst /,\\,$(OBJDIR))
endif

prebuild: | $(OBJDIR)
	$(PREBUILDCMDS)

ifneq (,$(PCH))
$(OBJECTS): $(GCH) | $(PCH_PLACEHOLDER)
$(GCH): $(PCH) | prebuild
	@echo $(notdir $<)
	$(SILENT) $(CXX) -x c++-header $(ALL_CXXFLAGS) -o "$@" -MF "$(@:%.gch=%.d)" -c "$<"
$(PCH_PLACEHOLDER): $(GCH) | $(OBJDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) touch "$@"
else
	$(SILENT) echo $null >> "$@"
endif
else
$(OBJECTS): | prebuild
endif


# File Rules
# #############################################

$(OBJDIR)/assembly_grammar.o: third_party/spirv-tools/source/assembly_grammar.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/binary.o: third_party/spirv-tools/source/binary.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/diagnostic.o: third_party/spirv-tools/source/diagnostic.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/disassemble.o: third_party/spirv-tools/source/disassemble.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/enum_string_mapping.o: third_party/spirv-tools/source/enum_string_mapping.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/ext_inst.o: third_party/spirv-tools/source/ext_inst.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/extensions.o: third_party/spirv-tools/source/extensions.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/libspirv.o: third_party/spirv-tools/source/libspirv.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/name_mapper.o: third_party/spirv-tools/source/name_mapper.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/opcode.o: third_party/spirv-tools/source/opcode.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/operand.o: third_party/spirv-tools/source/operand.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/parsed_operand.o: third_party/spirv-tools/source/parsed_operand.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/print.o: third_party/spirv-tools/source/print.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/software_version.o: third_party/spirv-tools/source/software_version.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/spirv_endian.o: third_party/spirv-tools/source/spirv_endian.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/spirv_fuzzer_options.o: third_party/spirv-tools/source/spirv_fuzzer_options.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/spirv_optimizer_options.o: third_party/spirv-tools/source/spirv_optimizer_options.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/spirv_reducer_options.o: third_party/spirv-tools/source/spirv_reducer_options.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/spirv_target_env.o: third_party/spirv-tools/source/spirv_target_env.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/spirv_validator_options.o: third_party/spirv-tools/source/spirv_validator_options.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/table.o: third_party/spirv-tools/source/table.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/text.o: third_party/spirv-tools/source/text.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/text_handler.o: third_party/spirv-tools/source/text_handler.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/bit_vector.o: third_party/spirv-tools/source/util/bit_vector.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/parse_number.o: third_party/spirv-tools/source/util/parse_number.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/string_utils.o: third_party/spirv-tools/source/util/string_utils.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/timer.o: third_party/spirv-tools/source/util/timer.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/basic_block.o: third_party/spirv-tools/source/val/basic_block.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/construct.o: third_party/spirv-tools/source/val/construct.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/function.o: third_party/spirv-tools/source/val/function.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/instruction.o: third_party/spirv-tools/source/val/instruction.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/validate.o: third_party/spirv-tools/source/val/validate.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/validate_adjacency.o: third_party/spirv-tools/source/val/validate_adjacency.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/validate_annotation.o: third_party/spirv-tools/source/val/validate_annotation.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/validate_arithmetics.o: third_party/spirv-tools/source/val/validate_arithmetics.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/validate_atomics.o: third_party/spirv-tools/source/val/validate_atomics.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/validate_barriers.o: third_party/spirv-tools/source/val/validate_barriers.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/validate_bitwise.o: third_party/spirv-tools/source/val/validate_bitwise.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/validate_builtins.o: third_party/spirv-tools/source/val/validate_builtins.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/validate_capability.o: third_party/spirv-tools/source/val/validate_capability.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/validate_cfg.o: third_party/spirv-tools/source/val/validate_cfg.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/validate_composites.o: third_party/spirv-tools/source/val/validate_composites.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/validate_constants.o: third_party/spirv-tools/source/val/validate_constants.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/validate_conversion.o: third_party/spirv-tools/source/val/validate_conversion.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/validate_debug.o: third_party/spirv-tools/source/val/validate_debug.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/validate_decorations.o: third_party/spirv-tools/source/val/validate_decorations.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/validate_derivatives.o: third_party/spirv-tools/source/val/validate_derivatives.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/validate_execution_limitations.o: third_party/spirv-tools/source/val/validate_execution_limitations.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/validate_extensions.o: third_party/spirv-tools/source/val/validate_extensions.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/validate_function.o: third_party/spirv-tools/source/val/validate_function.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/validate_id.o: third_party/spirv-tools/source/val/validate_id.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/validate_image.o: third_party/spirv-tools/source/val/validate_image.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/validate_instruction.o: third_party/spirv-tools/source/val/validate_instruction.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/validate_interfaces.o: third_party/spirv-tools/source/val/validate_interfaces.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/validate_layout.o: third_party/spirv-tools/source/val/validate_layout.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/validate_literals.o: third_party/spirv-tools/source/val/validate_literals.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/validate_logicals.o: third_party/spirv-tools/source/val/validate_logicals.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/validate_memory.o: third_party/spirv-tools/source/val/validate_memory.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/validate_memory_semantics.o: third_party/spirv-tools/source/val/validate_memory_semantics.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/validate_misc.o: third_party/spirv-tools/source/val/validate_misc.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/validate_mode_setting.o: third_party/spirv-tools/source/val/validate_mode_setting.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/validate_non_uniform.o: third_party/spirv-tools/source/val/validate_non_uniform.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/validate_primitives.o: third_party/spirv-tools/source/val/validate_primitives.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/validate_scopes.o: third_party/spirv-tools/source/val/validate_scopes.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/validate_small_type_uses.o: third_party/spirv-tools/source/val/validate_small_type_uses.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/validate_type.o: third_party/spirv-tools/source/val/validate_type.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/validation_state.o: third_party/spirv-tools/source/val/validation_state.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"

-include $(OBJECTS:%.o=%.d)
ifneq (,$(PCH))
  -include $(PCH_PLACEHOLDER).d
endif