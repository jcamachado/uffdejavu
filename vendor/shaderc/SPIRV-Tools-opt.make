# Alternative GNU Make project makefile autogenerated by Premake

ifndef config
  config=debug
endif

ifndef verbose
  SILENT = @
endif

.PHONY: clean prebuild

SHELLTYPE := posix
ifeq ($(shell echo "test"), "test")
	SHELLTYPE := msdos
endif

# Configurations
# #############################################

ifeq ($(origin CC), default)
  CC = gcc
endif
ifeq ($(origin CXX), default)
  CXX = g++
endif
ifeq ($(origin AR), default)
  AR = ar
endif
RESCOMP = windres
TARGETDIR = bin/SPIRV-Tools-opt
TARGET = $(TARGETDIR)/libSPIRV-Tools-opt.a
INCLUDES += -Ithird_party/spirv-tools -Ithird_party/spirv-headers/include -Ithird_party/spirv-tools/include
FORCE_INCLUDE +=
ALL_CPPFLAGS += $(CPPFLAGS) -MD -MP $(DEFINES) $(INCLUDES)
ALL_RESFLAGS += $(RESFLAGS) $(DEFINES) $(INCLUDES)
LIBS +=
LDDEPS +=
LINKCMD = $(AR) -rcs "$@" $(OBJECTS)
define PREBUILDCMDS
endef
define PRELINKCMDS
endef
define POSTBUILDCMDS
endef

ifeq ($(config),debug)
OBJDIR = bin-int/SPIRV-Tools-opt/Debug
DEFINES += -DSPIRV_CHECK_CONTEXT -DSPIRV_COLOR_TERMINAL -DSPIRV_LINUX -DSPIRV_TIMER_ENABLED
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -g -fdiagnostics-color=always -fPIC -fno-exceptions -ggdb -Wall -Wextra -Wpedantic -Wshadow
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -g -std=c++20 -fdiagnostics-color=always -fPIC -fno-exceptions -ggdb -Wall -Wextra -Wpedantic -Wshadow
ALL_LDFLAGS += $(LDFLAGS) -L/usr/lib64 -m64

else ifeq ($(config),release)
OBJDIR = bin-int/SPIRV-Tools-opt/Release
DEFINES += -DSPIRV_CHECK_CONTEXT -DSPIRV_COLOR_TERMINAL -DSPIRV_LINUX -DSPIRV_TIMER_ENABLED -DNDEBUG
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -O2 -fdiagnostics-color=always -fPIC -fno-exceptions -Wall -Wextra -Wpedantic -Wshadow
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -O2 -std=c++20 -fdiagnostics-color=always -fPIC -fno-exceptions -Wall -Wextra -Wpedantic -Wshadow
ALL_LDFLAGS += $(LDFLAGS) -L/usr/lib64 -m64 -s

else ifeq ($(config),dist)
OBJDIR = bin-int/SPIRV-Tools-opt/Dist
DEFINES += -DSPIRV_CHECK_CONTEXT -DSPIRV_COLOR_TERMINAL -DSPIRV_LINUX -DSPIRV_TIMER_ENABLED
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -fdiagnostics-color=always -fPIC -fno-exceptions -Wall -Wextra -Wpedantic -Wshadow
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -std=c++20 -fdiagnostics-color=always -fPIC -fno-exceptions -Wall -Wextra -Wpedantic -Wshadow
ALL_LDFLAGS += $(LDFLAGS) -L/usr/lib64 -m64 -s

endif

# Per File Configurations
# #############################################


# File sets
# #############################################

GENERATED :=
OBJECTS :=

GENERATED += $(OBJDIR)/aggressive_dead_code_elim_pass.o
GENERATED += $(OBJDIR)/amd_ext_to_khr.o
GENERATED += $(OBJDIR)/basic_block.o
GENERATED += $(OBJDIR)/block_merge_pass.o
GENERATED += $(OBJDIR)/block_merge_util.o
GENERATED += $(OBJDIR)/build_module.o
GENERATED += $(OBJDIR)/ccp_pass.o
GENERATED += $(OBJDIR)/cfg.o
GENERATED += $(OBJDIR)/cfg_cleanup_pass.o
GENERATED += $(OBJDIR)/code_sink.o
GENERATED += $(OBJDIR)/combine_access_chains.o
GENERATED += $(OBJDIR)/compact_ids_pass.o
GENERATED += $(OBJDIR)/composite.o
GENERATED += $(OBJDIR)/const_folding_rules.o
GENERATED += $(OBJDIR)/constants.o
GENERATED += $(OBJDIR)/control_dependence.o
GENERATED += $(OBJDIR)/convert_to_half_pass.o
GENERATED += $(OBJDIR)/convert_to_sampled_image_pass.o
GENERATED += $(OBJDIR)/copy_prop_arrays.o
GENERATED += $(OBJDIR)/dataflow.o
GENERATED += $(OBJDIR)/dead_branch_elim_pass.o
GENERATED += $(OBJDIR)/dead_insert_elim_pass.o
GENERATED += $(OBJDIR)/dead_variable_elimination.o
GENERATED += $(OBJDIR)/debug_info_manager.o
GENERATED += $(OBJDIR)/decoration_manager.o
GENERATED += $(OBJDIR)/def_use_manager.o
GENERATED += $(OBJDIR)/desc_sroa.o
GENERATED += $(OBJDIR)/dominator_analysis.o
GENERATED += $(OBJDIR)/dominator_tree.o
GENERATED += $(OBJDIR)/eliminate_dead_constant_pass.o
GENERATED += $(OBJDIR)/eliminate_dead_functions_pass.o
GENERATED += $(OBJDIR)/eliminate_dead_functions_util.o
GENERATED += $(OBJDIR)/eliminate_dead_members_pass.o
GENERATED += $(OBJDIR)/feature_manager.o
GENERATED += $(OBJDIR)/fix_storage_class.o
GENERATED += $(OBJDIR)/flatten_decoration_pass.o
GENERATED += $(OBJDIR)/fold.o
GENERATED += $(OBJDIR)/fold_spec_constant_op_and_composite_pass.o
GENERATED += $(OBJDIR)/folding_rules.o
GENERATED += $(OBJDIR)/freeze_spec_constant_value_pass.o
GENERATED += $(OBJDIR)/function.o
GENERATED += $(OBJDIR)/graphics_robust_access_pass.o
GENERATED += $(OBJDIR)/if_conversion.o
GENERATED += $(OBJDIR)/inline_exhaustive_pass.o
GENERATED += $(OBJDIR)/inline_opaque_pass.o
GENERATED += $(OBJDIR)/inline_pass.o
GENERATED += $(OBJDIR)/inst_bindless_check_pass.o
GENERATED += $(OBJDIR)/inst_buff_addr_check_pass.o
GENERATED += $(OBJDIR)/inst_debug_printf_pass.o
GENERATED += $(OBJDIR)/instruction.o
GENERATED += $(OBJDIR)/instruction_list.o
GENERATED += $(OBJDIR)/instrument_pass.o
GENERATED += $(OBJDIR)/interp_fixup_pass.o
GENERATED += $(OBJDIR)/ir_context.o
GENERATED += $(OBJDIR)/ir_loader.o
GENERATED += $(OBJDIR)/licm_pass.o
GENERATED += $(OBJDIR)/local_access_chain_convert_pass.o
GENERATED += $(OBJDIR)/local_redundancy_elimination.o
GENERATED += $(OBJDIR)/local_single_block_elim_pass.o
GENERATED += $(OBJDIR)/local_single_store_elim_pass.o
GENERATED += $(OBJDIR)/loop_dependence.o
GENERATED += $(OBJDIR)/loop_dependence_helpers.o
GENERATED += $(OBJDIR)/loop_descriptor.o
GENERATED += $(OBJDIR)/loop_fission.o
GENERATED += $(OBJDIR)/loop_fusion.o
GENERATED += $(OBJDIR)/loop_fusion_pass.o
GENERATED += $(OBJDIR)/loop_peeling.o
GENERATED += $(OBJDIR)/loop_unroller.o
GENERATED += $(OBJDIR)/loop_unswitch_pass.o
GENERATED += $(OBJDIR)/loop_utils.o
GENERATED += $(OBJDIR)/mem_pass.o
GENERATED += $(OBJDIR)/merge_return_pass.o
GENERATED += $(OBJDIR)/module.o
GENERATED += $(OBJDIR)/optimizer.o
GENERATED += $(OBJDIR)/pass.o
GENERATED += $(OBJDIR)/pass_manager.o
GENERATED += $(OBJDIR)/private_to_local_pass.o
GENERATED += $(OBJDIR)/propagator.o
GENERATED += $(OBJDIR)/reduce_load_size.o
GENERATED += $(OBJDIR)/redundancy_elimination.o
GENERATED += $(OBJDIR)/register_pressure.o
GENERATED += $(OBJDIR)/relax_float_ops_pass.o
GENERATED += $(OBJDIR)/remove_duplicates_pass.o
GENERATED += $(OBJDIR)/remove_unused_interface_variables_pass.o
GENERATED += $(OBJDIR)/replace_invalid_opc.o
GENERATED += $(OBJDIR)/scalar_analysis.o
GENERATED += $(OBJDIR)/scalar_analysis_simplification.o
GENERATED += $(OBJDIR)/scalar_replacement_pass.o
GENERATED += $(OBJDIR)/set_spec_constant_default_value_pass.o
GENERATED += $(OBJDIR)/simplification_pass.o
GENERATED += $(OBJDIR)/ssa_rewrite_pass.o
GENERATED += $(OBJDIR)/strength_reduction_pass.o
GENERATED += $(OBJDIR)/strip_debug_info_pass.o
GENERATED += $(OBJDIR)/strip_reflect_info_pass.o
GENERATED += $(OBJDIR)/struct_cfg_analysis.o
GENERATED += $(OBJDIR)/type_manager.o
GENERATED += $(OBJDIR)/types.o
GENERATED += $(OBJDIR)/unify_const_pass.o
GENERATED += $(OBJDIR)/upgrade_memory_model.o
GENERATED += $(OBJDIR)/value_number_table.o
GENERATED += $(OBJDIR)/vector_dce.o
GENERATED += $(OBJDIR)/workaround1209.o
GENERATED += $(OBJDIR)/wrap_opkill.o
OBJECTS += $(OBJDIR)/aggressive_dead_code_elim_pass.o
OBJECTS += $(OBJDIR)/amd_ext_to_khr.o
OBJECTS += $(OBJDIR)/basic_block.o
OBJECTS += $(OBJDIR)/block_merge_pass.o
OBJECTS += $(OBJDIR)/block_merge_util.o
OBJECTS += $(OBJDIR)/build_module.o
OBJECTS += $(OBJDIR)/ccp_pass.o
OBJECTS += $(OBJDIR)/cfg.o
OBJECTS += $(OBJDIR)/cfg_cleanup_pass.o
OBJECTS += $(OBJDIR)/code_sink.o
OBJECTS += $(OBJDIR)/combine_access_chains.o
OBJECTS += $(OBJDIR)/compact_ids_pass.o
OBJECTS += $(OBJDIR)/composite.o
OBJECTS += $(OBJDIR)/const_folding_rules.o
OBJECTS += $(OBJDIR)/constants.o
OBJECTS += $(OBJDIR)/control_dependence.o
OBJECTS += $(OBJDIR)/convert_to_half_pass.o
OBJECTS += $(OBJDIR)/convert_to_sampled_image_pass.o
OBJECTS += $(OBJDIR)/copy_prop_arrays.o
OBJECTS += $(OBJDIR)/dataflow.o
OBJECTS += $(OBJDIR)/dead_branch_elim_pass.o
OBJECTS += $(OBJDIR)/dead_insert_elim_pass.o
OBJECTS += $(OBJDIR)/dead_variable_elimination.o
OBJECTS += $(OBJDIR)/debug_info_manager.o
OBJECTS += $(OBJDIR)/decoration_manager.o
OBJECTS += $(OBJDIR)/def_use_manager.o
OBJECTS += $(OBJDIR)/desc_sroa.o
OBJECTS += $(OBJDIR)/dominator_analysis.o
OBJECTS += $(OBJDIR)/dominator_tree.o
OBJECTS += $(OBJDIR)/eliminate_dead_constant_pass.o
OBJECTS += $(OBJDIR)/eliminate_dead_functions_pass.o
OBJECTS += $(OBJDIR)/eliminate_dead_functions_util.o
OBJECTS += $(OBJDIR)/eliminate_dead_members_pass.o
OBJECTS += $(OBJDIR)/feature_manager.o
OBJECTS += $(OBJDIR)/fix_storage_class.o
OBJECTS += $(OBJDIR)/flatten_decoration_pass.o
OBJECTS += $(OBJDIR)/fold.o
OBJECTS += $(OBJDIR)/fold_spec_constant_op_and_composite_pass.o
OBJECTS += $(OBJDIR)/folding_rules.o
OBJECTS += $(OBJDIR)/freeze_spec_constant_value_pass.o
OBJECTS += $(OBJDIR)/function.o
OBJECTS += $(OBJDIR)/graphics_robust_access_pass.o
OBJECTS += $(OBJDIR)/if_conversion.o
OBJECTS += $(OBJDIR)/inline_exhaustive_pass.o
OBJECTS += $(OBJDIR)/inline_opaque_pass.o
OBJECTS += $(OBJDIR)/inline_pass.o
OBJECTS += $(OBJDIR)/inst_bindless_check_pass.o
OBJECTS += $(OBJDIR)/inst_buff_addr_check_pass.o
OBJECTS += $(OBJDIR)/inst_debug_printf_pass.o
OBJECTS += $(OBJDIR)/instruction.o
OBJECTS += $(OBJDIR)/instruction_list.o
OBJECTS += $(OBJDIR)/instrument_pass.o
OBJECTS += $(OBJDIR)/interp_fixup_pass.o
OBJECTS += $(OBJDIR)/ir_context.o
OBJECTS += $(OBJDIR)/ir_loader.o
OBJECTS += $(OBJDIR)/licm_pass.o
OBJECTS += $(OBJDIR)/local_access_chain_convert_pass.o
OBJECTS += $(OBJDIR)/local_redundancy_elimination.o
OBJECTS += $(OBJDIR)/local_single_block_elim_pass.o
OBJECTS += $(OBJDIR)/local_single_store_elim_pass.o
OBJECTS += $(OBJDIR)/loop_dependence.o
OBJECTS += $(OBJDIR)/loop_dependence_helpers.o
OBJECTS += $(OBJDIR)/loop_descriptor.o
OBJECTS += $(OBJDIR)/loop_fission.o
OBJECTS += $(OBJDIR)/loop_fusion.o
OBJECTS += $(OBJDIR)/loop_fusion_pass.o
OBJECTS += $(OBJDIR)/loop_peeling.o
OBJECTS += $(OBJDIR)/loop_unroller.o
OBJECTS += $(OBJDIR)/loop_unswitch_pass.o
OBJECTS += $(OBJDIR)/loop_utils.o
OBJECTS += $(OBJDIR)/mem_pass.o
OBJECTS += $(OBJDIR)/merge_return_pass.o
OBJECTS += $(OBJDIR)/module.o
OBJECTS += $(OBJDIR)/optimizer.o
OBJECTS += $(OBJDIR)/pass.o
OBJECTS += $(OBJDIR)/pass_manager.o
OBJECTS += $(OBJDIR)/private_to_local_pass.o
OBJECTS += $(OBJDIR)/propagator.o
OBJECTS += $(OBJDIR)/reduce_load_size.o
OBJECTS += $(OBJDIR)/redundancy_elimination.o
OBJECTS += $(OBJDIR)/register_pressure.o
OBJECTS += $(OBJDIR)/relax_float_ops_pass.o
OBJECTS += $(OBJDIR)/remove_duplicates_pass.o
OBJECTS += $(OBJDIR)/remove_unused_interface_variables_pass.o
OBJECTS += $(OBJDIR)/replace_invalid_opc.o
OBJECTS += $(OBJDIR)/scalar_analysis.o
OBJECTS += $(OBJDIR)/scalar_analysis_simplification.o
OBJECTS += $(OBJDIR)/scalar_replacement_pass.o
OBJECTS += $(OBJDIR)/set_spec_constant_default_value_pass.o
OBJECTS += $(OBJDIR)/simplification_pass.o
OBJECTS += $(OBJDIR)/ssa_rewrite_pass.o
OBJECTS += $(OBJDIR)/strength_reduction_pass.o
OBJECTS += $(OBJDIR)/strip_debug_info_pass.o
OBJECTS += $(OBJDIR)/strip_reflect_info_pass.o
OBJECTS += $(OBJDIR)/struct_cfg_analysis.o
OBJECTS += $(OBJDIR)/type_manager.o
OBJECTS += $(OBJDIR)/types.o
OBJECTS += $(OBJDIR)/unify_const_pass.o
OBJECTS += $(OBJDIR)/upgrade_memory_model.o
OBJECTS += $(OBJDIR)/value_number_table.o
OBJECTS += $(OBJDIR)/vector_dce.o
OBJECTS += $(OBJDIR)/workaround1209.o
OBJECTS += $(OBJDIR)/wrap_opkill.o

# Rules
# #############################################

all: $(TARGET)
	@:

$(TARGET): $(GENERATED) $(OBJECTS) $(LDDEPS) | $(TARGETDIR)
	$(PRELINKCMDS)
	@echo Linking SPIRV-Tools-opt
	$(SILENT) $(LINKCMD)
	$(POSTBUILDCMDS)

$(TARGETDIR):
	@echo Creating $(TARGETDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(TARGETDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(TARGETDIR))
endif

$(OBJDIR):
	@echo Creating $(OBJDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(OBJDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(OBJDIR))
endif

clean:
	@echo Cleaning SPIRV-Tools-opt
ifeq (posix,$(SHELLTYPE))
	$(SILENT) rm -f  $(TARGET)
	$(SILENT) rm -rf $(GENERATED)
	$(SILENT) rm -rf $(OBJDIR)
else
	$(SILENT) if exist $(subst /,\\,$(TARGET)) del $(subst /,\\,$(TARGET))
	$(SILENT) if exist $(subst /,\\,$(GENERATED)) del /s /q $(subst /,\\,$(GENERATED))
	$(SILENT) if exist $(subst /,\\,$(OBJDIR)) rmdir /s /q $(subst /,\\,$(OBJDIR))
endif

prebuild: | $(OBJDIR)
	$(PREBUILDCMDS)

ifneq (,$(PCH))
$(OBJECTS): $(GCH) | $(PCH_PLACEHOLDER)
$(GCH): $(PCH) | prebuild
	@echo $(notdir $<)
	$(SILENT) $(CXX) -x c++-header $(ALL_CXXFLAGS) -o "$@" -MF "$(@:%.gch=%.d)" -c "$<"
$(PCH_PLACEHOLDER): $(GCH) | $(OBJDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) touch "$@"
else
	$(SILENT) echo $null >> "$@"
endif
else
$(OBJECTS): | prebuild
endif


# File Rules
# #############################################

$(OBJDIR)/aggressive_dead_code_elim_pass.o: third_party/spirv-tools/source/opt/aggressive_dead_code_elim_pass.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/amd_ext_to_khr.o: third_party/spirv-tools/source/opt/amd_ext_to_khr.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/basic_block.o: third_party/spirv-tools/source/opt/basic_block.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/block_merge_pass.o: third_party/spirv-tools/source/opt/block_merge_pass.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/block_merge_util.o: third_party/spirv-tools/source/opt/block_merge_util.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/build_module.o: third_party/spirv-tools/source/opt/build_module.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/ccp_pass.o: third_party/spirv-tools/source/opt/ccp_pass.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/cfg.o: third_party/spirv-tools/source/opt/cfg.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/cfg_cleanup_pass.o: third_party/spirv-tools/source/opt/cfg_cleanup_pass.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/code_sink.o: third_party/spirv-tools/source/opt/code_sink.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/combine_access_chains.o: third_party/spirv-tools/source/opt/combine_access_chains.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/compact_ids_pass.o: third_party/spirv-tools/source/opt/compact_ids_pass.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/composite.o: third_party/spirv-tools/source/opt/composite.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/const_folding_rules.o: third_party/spirv-tools/source/opt/const_folding_rules.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/constants.o: third_party/spirv-tools/source/opt/constants.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/control_dependence.o: third_party/spirv-tools/source/opt/control_dependence.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/convert_to_half_pass.o: third_party/spirv-tools/source/opt/convert_to_half_pass.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/convert_to_sampled_image_pass.o: third_party/spirv-tools/source/opt/convert_to_sampled_image_pass.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/copy_prop_arrays.o: third_party/spirv-tools/source/opt/copy_prop_arrays.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/dataflow.o: third_party/spirv-tools/source/opt/dataflow.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/dead_branch_elim_pass.o: third_party/spirv-tools/source/opt/dead_branch_elim_pass.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/dead_insert_elim_pass.o: third_party/spirv-tools/source/opt/dead_insert_elim_pass.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/dead_variable_elimination.o: third_party/spirv-tools/source/opt/dead_variable_elimination.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/debug_info_manager.o: third_party/spirv-tools/source/opt/debug_info_manager.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/decoration_manager.o: third_party/spirv-tools/source/opt/decoration_manager.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/def_use_manager.o: third_party/spirv-tools/source/opt/def_use_manager.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/desc_sroa.o: third_party/spirv-tools/source/opt/desc_sroa.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/dominator_analysis.o: third_party/spirv-tools/source/opt/dominator_analysis.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/dominator_tree.o: third_party/spirv-tools/source/opt/dominator_tree.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/eliminate_dead_constant_pass.o: third_party/spirv-tools/source/opt/eliminate_dead_constant_pass.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/eliminate_dead_functions_pass.o: third_party/spirv-tools/source/opt/eliminate_dead_functions_pass.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/eliminate_dead_functions_util.o: third_party/spirv-tools/source/opt/eliminate_dead_functions_util.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/eliminate_dead_members_pass.o: third_party/spirv-tools/source/opt/eliminate_dead_members_pass.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/feature_manager.o: third_party/spirv-tools/source/opt/feature_manager.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/fix_storage_class.o: third_party/spirv-tools/source/opt/fix_storage_class.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/flatten_decoration_pass.o: third_party/spirv-tools/source/opt/flatten_decoration_pass.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/fold.o: third_party/spirv-tools/source/opt/fold.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/fold_spec_constant_op_and_composite_pass.o: third_party/spirv-tools/source/opt/fold_spec_constant_op_and_composite_pass.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/folding_rules.o: third_party/spirv-tools/source/opt/folding_rules.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/freeze_spec_constant_value_pass.o: third_party/spirv-tools/source/opt/freeze_spec_constant_value_pass.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/function.o: third_party/spirv-tools/source/opt/function.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/graphics_robust_access_pass.o: third_party/spirv-tools/source/opt/graphics_robust_access_pass.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/if_conversion.o: third_party/spirv-tools/source/opt/if_conversion.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/inline_exhaustive_pass.o: third_party/spirv-tools/source/opt/inline_exhaustive_pass.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/inline_opaque_pass.o: third_party/spirv-tools/source/opt/inline_opaque_pass.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/inline_pass.o: third_party/spirv-tools/source/opt/inline_pass.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/inst_bindless_check_pass.o: third_party/spirv-tools/source/opt/inst_bindless_check_pass.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/inst_buff_addr_check_pass.o: third_party/spirv-tools/source/opt/inst_buff_addr_check_pass.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/inst_debug_printf_pass.o: third_party/spirv-tools/source/opt/inst_debug_printf_pass.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/instruction.o: third_party/spirv-tools/source/opt/instruction.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/instruction_list.o: third_party/spirv-tools/source/opt/instruction_list.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/instrument_pass.o: third_party/spirv-tools/source/opt/instrument_pass.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/interp_fixup_pass.o: third_party/spirv-tools/source/opt/interp_fixup_pass.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/ir_context.o: third_party/spirv-tools/source/opt/ir_context.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/ir_loader.o: third_party/spirv-tools/source/opt/ir_loader.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/licm_pass.o: third_party/spirv-tools/source/opt/licm_pass.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/local_access_chain_convert_pass.o: third_party/spirv-tools/source/opt/local_access_chain_convert_pass.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/local_redundancy_elimination.o: third_party/spirv-tools/source/opt/local_redundancy_elimination.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/local_single_block_elim_pass.o: third_party/spirv-tools/source/opt/local_single_block_elim_pass.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/local_single_store_elim_pass.o: third_party/spirv-tools/source/opt/local_single_store_elim_pass.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/loop_dependence.o: third_party/spirv-tools/source/opt/loop_dependence.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/loop_dependence_helpers.o: third_party/spirv-tools/source/opt/loop_dependence_helpers.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/loop_descriptor.o: third_party/spirv-tools/source/opt/loop_descriptor.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/loop_fission.o: third_party/spirv-tools/source/opt/loop_fission.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/loop_fusion.o: third_party/spirv-tools/source/opt/loop_fusion.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/loop_fusion_pass.o: third_party/spirv-tools/source/opt/loop_fusion_pass.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/loop_peeling.o: third_party/spirv-tools/source/opt/loop_peeling.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/loop_unroller.o: third_party/spirv-tools/source/opt/loop_unroller.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/loop_unswitch_pass.o: third_party/spirv-tools/source/opt/loop_unswitch_pass.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/loop_utils.o: third_party/spirv-tools/source/opt/loop_utils.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/mem_pass.o: third_party/spirv-tools/source/opt/mem_pass.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/merge_return_pass.o: third_party/spirv-tools/source/opt/merge_return_pass.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/module.o: third_party/spirv-tools/source/opt/module.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/optimizer.o: third_party/spirv-tools/source/opt/optimizer.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/pass.o: third_party/spirv-tools/source/opt/pass.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/pass_manager.o: third_party/spirv-tools/source/opt/pass_manager.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/private_to_local_pass.o: third_party/spirv-tools/source/opt/private_to_local_pass.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/propagator.o: third_party/spirv-tools/source/opt/propagator.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/reduce_load_size.o: third_party/spirv-tools/source/opt/reduce_load_size.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/redundancy_elimination.o: third_party/spirv-tools/source/opt/redundancy_elimination.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/register_pressure.o: third_party/spirv-tools/source/opt/register_pressure.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/relax_float_ops_pass.o: third_party/spirv-tools/source/opt/relax_float_ops_pass.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/remove_duplicates_pass.o: third_party/spirv-tools/source/opt/remove_duplicates_pass.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/remove_unused_interface_variables_pass.o: third_party/spirv-tools/source/opt/remove_unused_interface_variables_pass.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/replace_invalid_opc.o: third_party/spirv-tools/source/opt/replace_invalid_opc.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/scalar_analysis.o: third_party/spirv-tools/source/opt/scalar_analysis.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/scalar_analysis_simplification.o: third_party/spirv-tools/source/opt/scalar_analysis_simplification.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/scalar_replacement_pass.o: third_party/spirv-tools/source/opt/scalar_replacement_pass.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/set_spec_constant_default_value_pass.o: third_party/spirv-tools/source/opt/set_spec_constant_default_value_pass.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/simplification_pass.o: third_party/spirv-tools/source/opt/simplification_pass.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/ssa_rewrite_pass.o: third_party/spirv-tools/source/opt/ssa_rewrite_pass.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/strength_reduction_pass.o: third_party/spirv-tools/source/opt/strength_reduction_pass.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/strip_debug_info_pass.o: third_party/spirv-tools/source/opt/strip_debug_info_pass.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/strip_reflect_info_pass.o: third_party/spirv-tools/source/opt/strip_reflect_info_pass.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/struct_cfg_analysis.o: third_party/spirv-tools/source/opt/struct_cfg_analysis.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/type_manager.o: third_party/spirv-tools/source/opt/type_manager.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/types.o: third_party/spirv-tools/source/opt/types.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/unify_const_pass.o: third_party/spirv-tools/source/opt/unify_const_pass.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/upgrade_memory_model.o: third_party/spirv-tools/source/opt/upgrade_memory_model.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/value_number_table.o: third_party/spirv-tools/source/opt/value_number_table.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/vector_dce.o: third_party/spirv-tools/source/opt/vector_dce.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/workaround1209.o: third_party/spirv-tools/source/opt/workaround1209.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/wrap_opkill.o: third_party/spirv-tools/source/opt/wrap_opkill.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"

-include $(OBJECTS:%.o=%.d)
ifneq (,$(PCH))
  -include $(PCH_PLACEHOLDER).d
endif