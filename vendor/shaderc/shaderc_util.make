# Alternative GNU Make project makefile autogenerated by Premake

ifndef config
  config=debug
endif

ifndef verbose
  SILENT = @
endif

.PHONY: clean prebuild

SHELLTYPE := posix
ifeq ($(shell echo "test"), "test")
	SHELLTYPE := msdos
endif

# Configurations
# #############################################

ifeq ($(origin CC), default)
  CC = gcc
endif
ifeq ($(origin CXX), default)
  CXX = g++
endif
ifeq ($(origin AR), default)
  AR = ar
endif
RESCOMP = windres
TARGETDIR = bin/shaderc_util
TARGET = $(TARGETDIR)/libshaderc_util.a
INCLUDES += -Ilibshaderc_util/include -Ithird_party/glslang -Ithird_party/spirv-tools/include
FORCE_INCLUDE +=
ALL_CPPFLAGS += $(CPPFLAGS) -MD -MP $(DEFINES) $(INCLUDES)
ALL_RESFLAGS += $(RESFLAGS) $(DEFINES) $(INCLUDES)
LIBS +=
LDDEPS +=
LINKCMD = $(AR) -rcs "$@" $(OBJECTS)
define PREBUILDCMDS
endef
define PRELINKCMDS
endef
define POSTBUILDCMDS
endef

ifeq ($(config),debug)
OBJDIR = bin-int/shaderc_util/Debug
DEFINES += -DENABLE_HLSL
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -g -fdiagnostics-color=always -fvisibility=hidden -fPIC -pthread -ggdb -Wall -Wextra -Wpedantic -Wshadow
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -g -std=c++20 -fdiagnostics-color=always -fvisibility=hidden -fPIC -pthread -ggdb -Wall -Wextra -Wpedantic -Wshadow
ALL_LDFLAGS += $(LDFLAGS) -L/usr/lib64 -m64

else ifeq ($(config),release)
OBJDIR = bin-int/shaderc_util/Release
DEFINES += -DENABLE_HLSL -DNDEBUG
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -O2 -fdiagnostics-color=always -fvisibility=hidden -fPIC -pthread -Wall -Wextra -Wpedantic -Wshadow
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -O2 -std=c++20 -fdiagnostics-color=always -fvisibility=hidden -fPIC -pthread -Wall -Wextra -Wpedantic -Wshadow
ALL_LDFLAGS += $(LDFLAGS) -L/usr/lib64 -m64 -s

else ifeq ($(config),dist)
OBJDIR = bin-int/shaderc_util/Dist
DEFINES += -DENABLE_HLSL
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -fdiagnostics-color=always -fvisibility=hidden -fPIC -pthread -Wall -Wextra -Wpedantic -Wshadow
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -std=c++20 -fdiagnostics-color=always -fvisibility=hidden -fPIC -pthread -Wall -Wextra -Wpedantic -Wshadow
ALL_LDFLAGS += $(LDFLAGS) -L/usr/lib64 -m64 -s

endif

# Per File Configurations
# #############################################


# File sets
# #############################################

GENERATED :=
OBJECTS :=

GENERATED += $(OBJDIR)/args.o
GENERATED += $(OBJDIR)/compiler.o
GENERATED += $(OBJDIR)/file_finder.o
GENERATED += $(OBJDIR)/io_shaderc.o
GENERATED += $(OBJDIR)/message.o
GENERATED += $(OBJDIR)/resources.o
GENERATED += $(OBJDIR)/shader_stage.o
GENERATED += $(OBJDIR)/spirv_tools_wrapper.o
GENERATED += $(OBJDIR)/version_profile.o
OBJECTS += $(OBJDIR)/args.o
OBJECTS += $(OBJDIR)/compiler.o
OBJECTS += $(OBJDIR)/file_finder.o
OBJECTS += $(OBJDIR)/io_shaderc.o
OBJECTS += $(OBJDIR)/message.o
OBJECTS += $(OBJDIR)/resources.o
OBJECTS += $(OBJDIR)/shader_stage.o
OBJECTS += $(OBJDIR)/spirv_tools_wrapper.o
OBJECTS += $(OBJDIR)/version_profile.o

# Rules
# #############################################

all: $(TARGET)
	@:

$(TARGET): $(GENERATED) $(OBJECTS) $(LDDEPS) | $(TARGETDIR)
	$(PRELINKCMDS)
	@echo Linking shaderc_util
	$(SILENT) $(LINKCMD)
	$(POSTBUILDCMDS)

$(TARGETDIR):
	@echo Creating $(TARGETDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(TARGETDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(TARGETDIR))
endif

$(OBJDIR):
	@echo Creating $(OBJDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(OBJDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(OBJDIR))
endif

clean:
	@echo Cleaning shaderc_util
ifeq (posix,$(SHELLTYPE))
	$(SILENT) rm -f  $(TARGET)
	$(SILENT) rm -rf $(GENERATED)
	$(SILENT) rm -rf $(OBJDIR)
else
	$(SILENT) if exist $(subst /,\\,$(TARGET)) del $(subst /,\\,$(TARGET))
	$(SILENT) if exist $(subst /,\\,$(GENERATED)) del /s /q $(subst /,\\,$(GENERATED))
	$(SILENT) if exist $(subst /,\\,$(OBJDIR)) rmdir /s /q $(subst /,\\,$(OBJDIR))
endif

prebuild: | $(OBJDIR)
	$(PREBUILDCMDS)

ifneq (,$(PCH))
$(OBJECTS): $(GCH) | $(PCH_PLACEHOLDER)
$(GCH): $(PCH) | prebuild
	@echo $(notdir $<)
	$(SILENT) $(CXX) -x c++-header $(ALL_CXXFLAGS) -o "$@" -MF "$(@:%.gch=%.d)" -c "$<"
$(PCH_PLACEHOLDER): $(GCH) | $(OBJDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) touch "$@"
else
	$(SILENT) echo $null >> "$@"
endif
else
$(OBJECTS): | prebuild
endif


# File Rules
# #############################################

$(OBJDIR)/args.o: libshaderc_util/src/args.cc
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/compiler.o: libshaderc_util/src/compiler.cc
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/file_finder.o: libshaderc_util/src/file_finder.cc
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/io_shaderc.o: libshaderc_util/src/io_shaderc.cc
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/message.o: libshaderc_util/src/message.cc
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/resources.o: libshaderc_util/src/resources.cc
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/shader_stage.o: libshaderc_util/src/shader_stage.cc
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/spirv_tools_wrapper.o: libshaderc_util/src/spirv_tools_wrapper.cc
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/version_profile.o: libshaderc_util/src/version_profile.cc
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"

-include $(OBJECTS:%.o=%.d)
ifneq (,$(PCH))
  -include $(PCH_PLACEHOLDER).d
endif