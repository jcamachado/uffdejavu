# Alternative GNU Make project makefile autogenerated by Premake

ifndef config
  config=debug
endif

ifndef verbose
  SILENT = @
endif

.PHONY: clean prebuild

SHELLTYPE := posix
ifeq ($(shell echo "test"), "test")
	SHELLTYPE := msdos
endif

# Configurations
# #############################################

ifeq ($(origin CC), default)
  CC = gcc
endif
ifeq ($(origin CXX), default)
  CXX = g++
endif
ifeq ($(origin AR), default)
  AR = ar
endif
RESCOMP = windres
TARGETDIR = bin/MachineIndependent
TARGET = $(TARGETDIR)/libMachineIndependent.a
INCLUDES += -Ithird_party/glslang
FORCE_INCLUDE +=
ALL_CPPFLAGS += $(CPPFLAGS) -MD -MP $(DEFINES) $(INCLUDES)
ALL_RESFLAGS += $(RESFLAGS) $(DEFINES) $(INCLUDES)
LIBS +=
LDDEPS +=
LINKCMD = $(AR) -rcs "$@" $(OBJECTS)
define PREBUILDCMDS
endef
define PRELINKCMDS
endef
define POSTBUILDCMDS
endef

ifeq ($(config),debug)
OBJDIR = bin-int/MachineIndependent/Debug
DEFINES += -DENABLE_HLSL -DENABLE_OPT=1 -DGLSLANG_OSINCLUDE_UNIX
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -g -fdiagnostics-color=always -fPIC -fno-exceptions -fno-rtti -pthread -ggdb -Wall -Wextra -Wpedantic -Wshadow
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -g -std=c++20 -fdiagnostics-color=always -fPIC -fno-exceptions -fno-rtti -pthread -ggdb -Wall -Wextra -Wpedantic -Wshadow
ALL_LDFLAGS += $(LDFLAGS) -L/usr/lib64 -m64

else ifeq ($(config),release)
OBJDIR = bin-int/MachineIndependent/Release
DEFINES += -DENABLE_HLSL -DENABLE_OPT=1 -DGLSLANG_OSINCLUDE_UNIX -DNDEBUG
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -O2 -fdiagnostics-color=always -fPIC -fno-exceptions -fno-rtti -pthread -Wall -Wextra -Wpedantic -Wshadow
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -O2 -std=c++20 -fdiagnostics-color=always -fPIC -fno-exceptions -fno-rtti -pthread -Wall -Wextra -Wpedantic -Wshadow
ALL_LDFLAGS += $(LDFLAGS) -L/usr/lib64 -m64 -s

else ifeq ($(config),dist)
OBJDIR = bin-int/MachineIndependent/Dist
DEFINES += -DENABLE_HLSL -DENABLE_OPT=1 -DGLSLANG_OSINCLUDE_UNIX
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -fdiagnostics-color=always -fPIC -fno-exceptions -fno-rtti -pthread -Wall -Wextra -Wpedantic -Wshadow
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -std=c++20 -fdiagnostics-color=always -fPIC -fno-exceptions -fno-rtti -pthread -Wall -Wextra -Wpedantic -Wshadow
ALL_LDFLAGS += $(LDFLAGS) -L/usr/lib64 -m64 -s

endif

# Per File Configurations
# #############################################


# File sets
# #############################################

GENERATED :=
OBJECTS :=

GENERATED += $(OBJDIR)/Constant.o
GENERATED += $(OBJDIR)/InfoSink.o
GENERATED += $(OBJDIR)/Initialize.o
GENERATED += $(OBJDIR)/IntermTraverse.o
GENERATED += $(OBJDIR)/Intermediate.o
GENERATED += $(OBJDIR)/ParseContextBase.o
GENERATED += $(OBJDIR)/ParseHelper.o
GENERATED += $(OBJDIR)/PoolAlloc.o
GENERATED += $(OBJDIR)/Pp.o
GENERATED += $(OBJDIR)/PpAtom.o
GENERATED += $(OBJDIR)/PpContext.o
GENERATED += $(OBJDIR)/PpScanner.o
GENERATED += $(OBJDIR)/PpTokens.o
GENERATED += $(OBJDIR)/RemoveTree.o
GENERATED += $(OBJDIR)/Scan.o
GENERATED += $(OBJDIR)/ShaderLang.o
GENERATED += $(OBJDIR)/SpirvIntrinsics.o
GENERATED += $(OBJDIR)/SymbolTable.o
GENERATED += $(OBJDIR)/Versions.o
GENERATED += $(OBJDIR)/attribute.o
GENERATED += $(OBJDIR)/glslang_tab.o
GENERATED += $(OBJDIR)/hlslAttributes.o
GENERATED += $(OBJDIR)/hlslGrammar.o
GENERATED += $(OBJDIR)/hlslOpMap.o
GENERATED += $(OBJDIR)/hlslParseHelper.o
GENERATED += $(OBJDIR)/hlslParseables.o
GENERATED += $(OBJDIR)/hlslScanContext.o
GENERATED += $(OBJDIR)/hlslTokenStream.o
GENERATED += $(OBJDIR)/intermOut.o
GENERATED += $(OBJDIR)/iomapper.o
GENERATED += $(OBJDIR)/limits.o
GENERATED += $(OBJDIR)/linkValidate.o
GENERATED += $(OBJDIR)/parseConst.o
GENERATED += $(OBJDIR)/propagateNoContraction.o
GENERATED += $(OBJDIR)/reflection.o
OBJECTS += $(OBJDIR)/Constant.o
OBJECTS += $(OBJDIR)/InfoSink.o
OBJECTS += $(OBJDIR)/Initialize.o
OBJECTS += $(OBJDIR)/IntermTraverse.o
OBJECTS += $(OBJDIR)/Intermediate.o
OBJECTS += $(OBJDIR)/ParseContextBase.o
OBJECTS += $(OBJDIR)/ParseHelper.o
OBJECTS += $(OBJDIR)/PoolAlloc.o
OBJECTS += $(OBJDIR)/Pp.o
OBJECTS += $(OBJDIR)/PpAtom.o
OBJECTS += $(OBJDIR)/PpContext.o
OBJECTS += $(OBJDIR)/PpScanner.o
OBJECTS += $(OBJDIR)/PpTokens.o
OBJECTS += $(OBJDIR)/RemoveTree.o
OBJECTS += $(OBJDIR)/Scan.o
OBJECTS += $(OBJDIR)/ShaderLang.o
OBJECTS += $(OBJDIR)/SpirvIntrinsics.o
OBJECTS += $(OBJDIR)/SymbolTable.o
OBJECTS += $(OBJDIR)/Versions.o
OBJECTS += $(OBJDIR)/attribute.o
OBJECTS += $(OBJDIR)/glslang_tab.o
OBJECTS += $(OBJDIR)/hlslAttributes.o
OBJECTS += $(OBJDIR)/hlslGrammar.o
OBJECTS += $(OBJDIR)/hlslOpMap.o
OBJECTS += $(OBJDIR)/hlslParseHelper.o
OBJECTS += $(OBJDIR)/hlslParseables.o
OBJECTS += $(OBJDIR)/hlslScanContext.o
OBJECTS += $(OBJDIR)/hlslTokenStream.o
OBJECTS += $(OBJDIR)/intermOut.o
OBJECTS += $(OBJDIR)/iomapper.o
OBJECTS += $(OBJDIR)/limits.o
OBJECTS += $(OBJDIR)/linkValidate.o
OBJECTS += $(OBJDIR)/parseConst.o
OBJECTS += $(OBJDIR)/propagateNoContraction.o
OBJECTS += $(OBJDIR)/reflection.o

# Rules
# #############################################

all: $(TARGET)
	@:

$(TARGET): $(GENERATED) $(OBJECTS) $(LDDEPS) | $(TARGETDIR)
	$(PRELINKCMDS)
	@echo Linking MachineIndependent
	$(SILENT) $(LINKCMD)
	$(POSTBUILDCMDS)

$(TARGETDIR):
	@echo Creating $(TARGETDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(TARGETDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(TARGETDIR))
endif

$(OBJDIR):
	@echo Creating $(OBJDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(OBJDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(OBJDIR))
endif

clean:
	@echo Cleaning MachineIndependent
ifeq (posix,$(SHELLTYPE))
	$(SILENT) rm -f  $(TARGET)
	$(SILENT) rm -rf $(GENERATED)
	$(SILENT) rm -rf $(OBJDIR)
else
	$(SILENT) if exist $(subst /,\\,$(TARGET)) del $(subst /,\\,$(TARGET))
	$(SILENT) if exist $(subst /,\\,$(GENERATED)) del /s /q $(subst /,\\,$(GENERATED))
	$(SILENT) if exist $(subst /,\\,$(OBJDIR)) rmdir /s /q $(subst /,\\,$(OBJDIR))
endif

prebuild: | $(OBJDIR)
	$(PREBUILDCMDS)

ifneq (,$(PCH))
$(OBJECTS): $(GCH) | $(PCH_PLACEHOLDER)
$(GCH): $(PCH) | prebuild
	@echo $(notdir $<)
	$(SILENT) $(CXX) -x c++-header $(ALL_CXXFLAGS) -o "$@" -MF "$(@:%.gch=%.d)" -c "$<"
$(PCH_PLACEHOLDER): $(GCH) | $(OBJDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) touch "$@"
else
	$(SILENT) echo $null >> "$@"
endif
else
$(OBJECTS): | prebuild
endif


# File Rules
# #############################################

$(OBJDIR)/hlslAttributes.o: third_party/glslang/glslang/HLSL/hlslAttributes.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/hlslGrammar.o: third_party/glslang/glslang/HLSL/hlslGrammar.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/hlslOpMap.o: third_party/glslang/glslang/HLSL/hlslOpMap.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/hlslParseHelper.o: third_party/glslang/glslang/HLSL/hlslParseHelper.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/hlslParseables.o: third_party/glslang/glslang/HLSL/hlslParseables.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/hlslScanContext.o: third_party/glslang/glslang/HLSL/hlslScanContext.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/hlslTokenStream.o: third_party/glslang/glslang/HLSL/hlslTokenStream.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Constant.o: third_party/glslang/glslang/MachineIndependent/Constant.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/InfoSink.o: third_party/glslang/glslang/MachineIndependent/InfoSink.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Initialize.o: third_party/glslang/glslang/MachineIndependent/Initialize.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/IntermTraverse.o: third_party/glslang/glslang/MachineIndependent/IntermTraverse.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Intermediate.o: third_party/glslang/glslang/MachineIndependent/Intermediate.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/ParseContextBase.o: third_party/glslang/glslang/MachineIndependent/ParseContextBase.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/ParseHelper.o: third_party/glslang/glslang/MachineIndependent/ParseHelper.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/PoolAlloc.o: third_party/glslang/glslang/MachineIndependent/PoolAlloc.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/RemoveTree.o: third_party/glslang/glslang/MachineIndependent/RemoveTree.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Scan.o: third_party/glslang/glslang/MachineIndependent/Scan.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/ShaderLang.o: third_party/glslang/glslang/MachineIndependent/ShaderLang.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/SpirvIntrinsics.o: third_party/glslang/glslang/MachineIndependent/SpirvIntrinsics.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/SymbolTable.o: third_party/glslang/glslang/MachineIndependent/SymbolTable.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Versions.o: third_party/glslang/glslang/MachineIndependent/Versions.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/attribute.o: third_party/glslang/glslang/MachineIndependent/attribute.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/glslang_tab.o: third_party/glslang/glslang/MachineIndependent/glslang_tab.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/intermOut.o: third_party/glslang/glslang/MachineIndependent/intermOut.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/iomapper.o: third_party/glslang/glslang/MachineIndependent/iomapper.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/limits.o: third_party/glslang/glslang/MachineIndependent/limits.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/linkValidate.o: third_party/glslang/glslang/MachineIndependent/linkValidate.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/parseConst.o: third_party/glslang/glslang/MachineIndependent/parseConst.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Pp.o: third_party/glslang/glslang/MachineIndependent/preprocessor/Pp.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/PpAtom.o: third_party/glslang/glslang/MachineIndependent/preprocessor/PpAtom.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/PpContext.o: third_party/glslang/glslang/MachineIndependent/preprocessor/PpContext.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/PpScanner.o: third_party/glslang/glslang/MachineIndependent/preprocessor/PpScanner.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/PpTokens.o: third_party/glslang/glslang/MachineIndependent/preprocessor/PpTokens.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/propagateNoContraction.o: third_party/glslang/glslang/MachineIndependent/propagateNoContraction.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/reflection.o: third_party/glslang/glslang/MachineIndependent/reflection.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"

-include $(OBJECTS:%.o=%.d)
ifneq (,$(PCH))
  -include $(PCH_PLACEHOLDER).d
endif